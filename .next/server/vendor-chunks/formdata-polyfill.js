"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/formdata-polyfill";
exports.ids = ["vendor-chunks/formdata-polyfill"];
exports.modules = {

/***/ "(rsc)/./node_modules/formdata-polyfill/esm.min.js":
/*!***************************************************!*\
  !*** ./node_modules/formdata-polyfill/esm.min.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   File: () => (/* binding */ File),\n/* harmony export */   FormData: () => (/* binding */ FormData),\n/* harmony export */   formDataToBlob: () => (/* binding */ formDataToBlob)\n/* harmony export */ });\n/* harmony import */ var fetch_blob__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fetch-blob */ \"(rsc)/./node_modules/fetch-blob/index.js\");\n/* harmony import */ var fetch_blob_file_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fetch-blob/file.js */ \"(rsc)/./node_modules/fetch-blob/file.js\");\n/*! formdata-polyfill. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */ \n\nvar { toStringTag: t, iterator: i, hasInstance: h } = Symbol, r = Math.random, m = \"append,set,get,getAll,delete,keys,values,entries,forEach,constructor\".split(\",\"), f = (a, b, c)=>(a += \"\", /^(Blob|File)$/.test(b && b[t]) ? [\n        (c = c !== void 0 ? c + \"\" : b[t] == \"File\" ? b.name : \"blob\", a),\n        b.name !== c || b[t] == \"blob\" ? new fetch_blob_file_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([\n            b\n        ], c, b) : b\n    ] : [\n        a,\n        b + \"\"\n    ]), e = (c, f)=>(f ? c : c.replace(/\\r?\\n|\\r/g, \"\\r\\n\")).replace(/\\n/g, \"%0A\").replace(/\\r/g, \"%0D\").replace(/\"/g, \"%22\"), x = (n, a, e)=>{\n    if (a.length < e) {\n        throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`);\n    }\n};\nconst File = fetch_blob_file_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/** @type {typeof globalThis.FormData} */ const FormData = class FormData {\n    #d;\n    constructor(...a){\n        this.#d = [];\n        if (a.length) throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`);\n    }\n    get [t]() {\n        return \"FormData\";\n    }\n    [i]() {\n        return this.entries();\n    }\n    static [h](o) {\n        return o && typeof o === \"object\" && o[t] === \"FormData\" && !m.some((m)=>typeof o[m] != \"function\");\n    }\n    append(...a) {\n        x(\"append\", arguments, 2);\n        this.#d.push(f(...a));\n    }\n    delete(a) {\n        x(\"delete\", arguments, 1);\n        a += \"\";\n        this.#d = this.#d.filter(([b])=>b !== a);\n    }\n    get(a) {\n        x(\"get\", arguments, 1);\n        a += \"\";\n        for(var b = this.#d, l = b.length, c = 0; c < l; c++)if (b[c][0] === a) return b[c][1];\n        return null;\n    }\n    getAll(a, b) {\n        x(\"getAll\", arguments, 1);\n        b = [];\n        a += \"\";\n        this.#d.forEach((c)=>c[0] === a && b.push(c[1]));\n        return b;\n    }\n    has(a) {\n        x(\"has\", arguments, 1);\n        a += \"\";\n        return this.#d.some((b)=>b[0] === a);\n    }\n    forEach(a, b) {\n        x(\"forEach\", arguments, 1);\n        for (var [c, d] of this)a.call(b, d, c, this);\n    }\n    set(...a) {\n        x(\"set\", arguments, 2);\n        var b = [], c = !0;\n        a = f(...a);\n        this.#d.forEach((d)=>{\n            d[0] === a[0] ? c && (c = !b.push(a)) : b.push(d);\n        });\n        c && b.push(a);\n        this.#d = b;\n    }\n    *entries() {\n        yield* this.#d;\n    }\n    *keys() {\n        for (var [a] of this)yield a;\n    }\n    *values() {\n        for (var [, a] of this)yield a;\n    }\n};\n/** @param {FormData} F */ function formDataToBlob(F, B = fetch_blob__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n    var b = `${r()}${r()}`.replace(/\\./g, \"\").slice(-28).padStart(32, \"-\"), c = [], p = `--${b}\\r\\nContent-Disposition: form-data; name=\"`;\n    F.forEach((v, n)=>typeof v == \"string\" ? c.push(p + e(n) + `\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, \"\\r\\n\")}\\r\\n`) : c.push(p + e(n) + `\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type || \"application/octet-stream\"}\\r\\n\\r\\n`, v, \"\\r\\n\"));\n    c.push(`--${b}--`);\n    return new B(c, {\n        type: \"multipart/form-data; boundary=\" + b\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/formdata-polyfill/esm.min.js\n");

/***/ })

};
;